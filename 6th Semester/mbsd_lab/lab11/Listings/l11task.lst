C51 COMPILER V9.60.7.0   L11TASK                                                           05/25/2024 21:59:07 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE L11TASK
OBJECT MODULE PLACED IN .\Objects\l11task.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE l11task.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\l
                    -11task.lst) TABS(2) OBJECT(.\Objects\l11task.obj)

line level    source

   1          #include<reg51.h>
   2          
   3          sbit rs=P3^7; //Register Select(RS) pin of 16*2 lcd
   4          
   5          sbit rw=P2^6; //Read/Write(RW) pin of 16*2 lcd
   6          
   7          sbit en=P3^6; //Enable(E) pin of 16*2 lcd
   8          
   9           
  10          
  11          sbit rd_adc=P3^0; //Read(RD) pin of ADC0804
  12          
  13          sbit wr_adc=P3^1; //Write(WR) pin of ADC0804
  14          
  15          sbit intr_adc=P3^2; //Interrupt(INTR) pin of ADC0804
  16          
  17           
  18          
  19          void delay(unsigned int)  ; //function for creating delay
  20          
  21          void cmdwrt(unsigned char); //function for sending commands to 16*2 lcd display
  22          
  23          void datawrt(unsigned char); //function for sending data to 16*2 lcd display
  24          
  25          void convert_display(unsigned char); //function for converting ADC value to temperature and display it on 
             -16*2 lcd display
  26          
  27           
  28          
  29          void main(void) //main function
  30          
  31          {
  32   1      
  33   1         unsigned char i;
  34   1      
  35   1         unsigned char cmd[]={0x38,0x01,0x06,0x0c,0x82};//16*2 lcd initialization commands
  36   1      
  37   1         unsigned char data1[]="Temperature:";
  38   1      
  39   1         unsigned char value;
  40   1      
  41   1       
  42   1      
  43   1         P1=0xFF; //make Port 1 as input port
  44   1      
  45   1         P2=0x00; //make Port 0 as output port
  46   1      
  47   1       
  48   1      
  49   1         for(i=0;i<5;i++) //send commands to 16*2 lcd display one command at a time
  50   1      
  51   1         {
  52   2      
  53   2            cmdwrt(cmd[i]); //function call to send commands to 16*2 lcd display
C51 COMPILER V9.60.7.0   L11TASK                                                           05/25/2024 21:59:07 PAGE 2   

  54   2      
  55   2        delay(1);
  56   2      
  57   2         }
  58   1      
  59   1       
  60   1      
  61   1      
  62   1      
  63   1       
  64   1      
  65   1         intr_adc=1; //make INTR pin as input
  66   1      
  67   1         rd_adc=1;    //set RD pin HIGH
  68   1      
  69   1         wr_adc=1; //set WR pin LOW
  70   1      
  71   1       
  72   1      
  73   1         while(1)    //repeat forever
  74   1      
  75   1         {
  76   2      
  77   2        wr_adc=0; //send LOW to HIGH pulse on WR pin
  78   2      
  79   2        delay(1);
  80   2      
  81   2        wr_adc=1;
  82   2      
  83   2        while(intr_adc==1); //wait for End of Conversion
  84   2      
  85   2        rd_adc=0; //make RD = 0 to read the data from ADC0804
  86   2      
  87   2        value=P1; //copy ADC data
  88   2      
  89   2        convert_display(value); //function call to convert ADC data into temperature and display it on     16*2 
             -lcd display
  90   2      
  91   2        delay(1000);  //interval between every cycles
  92   2      
  93   2        rd_adc=1;   //make RD = 1 for the next cycle
  94   2      
  95   2         }
  96   1      
  97   1       
  98   1      
  99   1      }
 100          
 101          void cmdwrt (unsigned char x)
 102          
 103          { 
 104   1      
 105   1         P2=x;  //send the command to Port 0 on which 16*2 lcd is connected
 106   1      
 107   1         rs=0;  //make RS = 0 for command
 108   1      
 109   1         rw=0;  //make RW = 0 for write operation
 110   1      
 111   1         en=1;  //send a HIGH to LOW pulse on Enable(E) pin to start commandwrite operation 
 112   1      
 113   1         delay(1);
 114   1      
C51 COMPILER V9.60.7.0   L11TASK                                                           05/25/2024 21:59:07 PAGE 3   

 115   1         en=0;
 116   1      
 117   1      }
 118          
 119          void datawrt (unsigned char y)
 120          
 121          { 
 122   1      
 123   1         P2=y; //send the data to Port 0 on which 16*2 lcd is connected
 124   1      
 125   1         rs=1; //make RS = 1 for command
 126   1      
 127   1         rw=0; //make RW = 0 for write operation
 128   1      
 129   1         en=1; //send a HIGH to LOW pulse on Enable(E) pin to start datawrite operation
 130   1      
 131   1         delay(1);
 132   1      
 133   1         en=0;
 134   1      
 135   1      }
 136          
 137          void convert_display(unsigned char value)
 138          
 139          {
 140   1      
 141   1        unsigned char x1,x2,x3;
 142   1      
 143   1       
 144   1      
 145   1        cmdwrt(0xC0);  //command to set the cursor to 6th position of 2nd line on 16*2 lcd
 146   1      
 147   1       
 148   1      
 149   1        x1=(value/10); //divide the value by 10 and store quotient in variable x1
 150   1        x1=x1*2;
 151   1        x1=x1+(0x30); //convert variable x1 to ascii by adding 0x30
 152   1      
 153   1        x2=value%10; //divide the value by 10 and store remainder in variable x2
 154   1        x2=x2;
 155   1        x2=x2+(0x30); //convert variable x2 to ascii by adding 0x30
 156   1      
 157   1        x3=0xDF; //ascii value of degree(°) symbol
 158   1      
 159   1        datawrt(x1);  //display temperature on 16*2 lcd display
 160   1        datawrt(x2);
 161   1        datawrt(67);
 162   1      }
 163          
 164           
 165          
 166          void delay(unsigned int z)
 167          
 168          {
 169   1      
 170   1        unsigned int p,q;
 171   1      
 172   1        for(p=0;p<z;p++)    //repeat for 'z' times
 173   1      
 174   1        {
 175   2      
 176   2          for(q=0;q<1375;q++);   //repeat for 1375 times
C51 COMPILER V9.60.7.0   L11TASK                                                           05/25/2024 21:59:07 PAGE 4   

 177   2      
 178   2        }
 179   1      
 180   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    214    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
